buildscript {
    repositories {
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:3.1.4")
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

springBoot  {
    mainClass = 'org.jetbrains.Main'
}

group = 'org.jetbrains'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencyManagement {
    dependencies {}

}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.4'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.1.4'
    implementation 'org.postgresql:postgresql:42.3.8'

    implementation project(':trigger-api')
    implementation project(':trigger-service')
    implementation project(':trigger-data')
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenLocal()
        mavenCentral()

        test {
            useJUnitPlatform()
            testLogging {
                events 'passed', 'skipped', 'failed'
            }
        }
    }
    dependencyManagement {
        dependencies {
            dependency ('org.springframework.boot:spring-boot-starter:3.1.4')
            dependency( 'org.springframework.boot:spring-boot-starter-web:3.1.4')

        }
    }
    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.30'
        compileOnly 'org.slf4j:slf4j-api'
        annotationProcessor 'org.projectlombok:lombok:1.18.30'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:3.1.4'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}

subprojects {
    tasks.register('makePretty', Delete).configure {
        delete 'out'
    }
}
